apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-deployment"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.dockerRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
{{- if .Values.env }}          
          env:
          {{- range $key, $val := .Values.env }}
          - name : {{ $key | quote }}
            value : {{ $val | quote }}
          {{- end }}
{{- end }}          
          ports:
            - containerPort: {{ .Values.env.PORT }}
          resources:
{{ toYaml .Values.resources | indent 12 }}          
          command: ["bash"]
          args: ["run_app.sh"] 
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.env.PORT }}
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.env.PORT }}
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.env.PORT }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}